{"ast":null,"code":"import _classCallCheck from \"C:\\\\VSO\\\\react-tutorial\\\\pics\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\VSO\\\\react-tutorial\\\\pics\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\VSO\\\\react-tutorial\\\\pics\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\VSO\\\\react-tutorial\\\\pics\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\VSO\\\\react-tutorial\\\\pics\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\VSO\\\\react-tutorial\\\\pics\\\\src\\\\components\\\\ImageCard.js\";\nimport React from 'react';\n\nvar ImageCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageCard, _React$Component);\n\n  function ImageCard(props) {\n    var _this;\n\n    _classCallCheck(this, ImageCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageCard).call(this, props));\n\n    _this.setSpans = function () {\n      var height = _this.imageRef.current.clientHeight;\n      var spans = Math.ceil(height / 150);\n\n      _this.setState({\n        spans: spans\n      });\n    };\n\n    _this.state = {\n      spans: 0\n    };\n    _this.imageRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(ImageCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$image = this.props.image,\n          description = _this$props$image.description,\n          urls = _this$props$image.urls;\n      return React.createElement(\"div\", {\n        style: {\n          gridRowEnd: \"span \".concat(this.state.spans)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        ref: this.imageRef,\n        alt: description,\n        src: urls.regular,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ImageCard;\n}(React.Component);\n\nexport default ImageCard;","map":{"version":3,"sources":["C:\\VSO\\react-tutorial\\pics\\src\\components\\ImageCard.js"],"names":["React","ImageCard","props","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","setState","state","createRef","addEventListener","image","description","urls","gridRowEnd","regular","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;;AADe,UAWnBC,QAXmB,GAWR,YAAM;AACb,UAAMC,MAAM,GAAG,MAAKC,QAAL,CAAcC,OAAd,CAAsBC,YAArC;AACA,UAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUN,MAAM,GAAG,GAAnB,CAAd;;AACA,YAAKO,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACH,KAfkB;;AAEf,UAAKI,KAAL,GAAa;AAAEJ,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,UAAKH,QAAL,GAAgBL,KAAK,CAACa,SAAN,EAAhB;AAHe;AAIlB;;;;wCAEmB;AAChB,WAAKR,QAAL,CAAcC,OAAd,CAAsBQ,gBAAtB,CAAuC,MAAvC,EAA+C,KAAKX,QAApD;AAEH;;;6BAQQ;AAAA,8BACyB,KAAKD,KAAL,CAAWa,KADpC;AAAA,UACGC,WADH,qBACGA,WADH;AAAA,UACgBC,IADhB,qBACgBA,IADhB;AAEL,aACI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,iBAAU,KAAKN,KAAL,CAAWJ,KAArB;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,GAAG,EAAE,KAAKH,QADd;AAEI,QAAA,GAAG,EAAEW,WAFT;AAGI,QAAA,GAAG,EAAEC,IAAI,CAACE,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AASH;;;;EA7BmBnB,KAAK,CAACoB,S;;AAgC9B,eAAenB,SAAf","sourcesContent":["import React from 'react';\r\n\r\nclass ImageCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { spans: 0 }\r\n        this.imageRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.imageRef.current.addEventListener('load', this.setSpans);\r\n\r\n    }\r\n\r\n    setSpans = () => {\r\n        const height = this.imageRef.current.clientHeight;\r\n        const spans = Math.ceil(height / 150)\r\n        this.setState({ spans: spans });\r\n    }\r\n\r\n    render() {\r\n        const { description, urls } = this.props.image\r\n        return (\r\n            <div style={{gridRowEnd: `span ${this.state.spans}` }}>\r\n                <img\r\n                    ref={this.imageRef}\r\n                    alt={description}\r\n                    src={urls.regular}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageCard;"]},"metadata":{},"sourceType":"module"}