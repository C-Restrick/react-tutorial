{"ast":null,"code":"import { combineReducers } from 'redux';\n\nvar songsReducer = function songsReducer() {\n  return [{\n    title: 'No Scrubs',\n    duration: '4:05'\n  }, {\n    title: 'Macarena',\n    duration: '2:30'\n  }, {\n    title: 'All star',\n    duration: '3:15'\n  }, {\n    title: 'I want it that way',\n    duration: '1:45'\n  }];\n};\n\nvar selectedSongReducer = function selectedSongReducer() {\n  var selectedSong = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'SONG_SELECTED') {\n    return action.payload;\n  }\n\n  return selectedSong;\n};\n\nexport default combineReducers({\n  songs: songsReducer,\n  selectedSong: selectedSongReducer\n});","map":{"version":3,"sources":["C:\\VSO\\react-tutorial\\songs\\src\\reducers\\index.js"],"names":["combineReducers","songsReducer","title","duration","selectedSongReducer","selectedSong","action","type","payload","songs"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,SAAO,CACH;AAAEC,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC,GADG,EAEH;AAAED,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAFG,EAGH;AAAED,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAHG,EAIH;AAAED,IAAAA,KAAK,EAAE,oBAAT;AAA+BC,IAAAA,QAAQ,EAAE;AAAzC,GAJG,CAAP;AAMH,CAPD;;AASA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAiC;AAAA,MAAhCC,YAAgC,uEAAjB,IAAiB;AAAA,MAAXC,MAAW;;AACzD,MAAIA,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACjC,WAAOD,MAAM,CAACE,OAAd;AACH;;AACD,SAAOH,YAAP;AACH,CALD;;AAOA,eAAeL,eAAe,CAAC;AAC3BS,EAAAA,KAAK,EAAER,YADoB;AAE3BI,EAAAA,YAAY,EAAED;AAFa,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nconst songsReducer = () => {\r\n    return [\r\n        { title: 'No Scrubs', duration: '4:05' },\r\n        { title: 'Macarena', duration: '2:30' },\r\n        { title: 'All star', duration: '3:15' },\r\n        { title: 'I want it that way', duration: '1:45' }\r\n    ];\r\n};\r\n\r\nconst selectedSongReducer = (selectedSong = null, action) => {\r\n    if (action.type === 'SONG_SELECTED') {\r\n        return action.payload;\r\n    }\r\n    return selectedSong;\r\n};\r\n\r\nexport default combineReducers({\r\n    songs: songsReducer,\r\n    selectedSong: selectedSongReducer\r\n});"]},"metadata":{},"sourceType":"module"}